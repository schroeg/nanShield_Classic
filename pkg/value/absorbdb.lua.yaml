storage:
  version: 2.5.1.38677
  path: .dbcache
schema:
  tables:
    spelllevels:
      index_col: SpellID
  views:
    schools:
      dependencies:
        - spelleffect
      query: |
        select distinct spelleffect."EffectMiscValue[0]" as "mask"
        from spelleffect
        where spelleffect.EffectAura in (69, 97)
        order by spelleffect."EffectMiscValue[0]"
    effects:
      dependencies:
        - chrclasses
        - spell
        - spelleffect
        - spellname
        - spelllevels
        - spellclassoptions
      query: |
        select
          spelleffect.SpellID as "spellId",
          spelleffect.EffectBasePoints as "base",
          spelleffect.EffectRealPointsPerLevel as "perLevel",
          spelleffect."EffectMiscValue[0]" as "school",
          ifnull(spelllevels.BaseLevel, 0) as "baseLevel",
          ifnull(spelllevels.MaxLevel, 0) as "maxLevel",
          ifnull(spelllevels.SpellLevel, 0) as "spellLevel",
          trim(spellname.Name_lang) as "name",
          spell.NameSubtext_lang as "rank",
          chrclasses.Name_lang as "class"
        from spelleffect
        left join spell on spelleffect.SpellID = spell.ID
        left join spellname on spelleffect.SpellID = spellname.ID
        left join spelllevels on spelleffect.SpellID = spelllevels.SpellID
        left join spellclassoptions on spelleffect.SpellID = spellclassoptions.SpellID
        left join chrclasses on spellclassoptions.SpellClassSet = chrclasses.SpellClassSet
        where spelleffect.EffectAura in (69, 97)
        order by
          chrclasses.ID,
          spelleffect."EffectMiscValue[0]",
          spellname.Name_lang,
          spell.NameSubtext_lang,
          spelleffect.EffectBasePoints,
          spelleffect.SpellID
output:
  absorbdb.lua:
    kind: jinja
    dependencies:
      - effects
      - schools
    template: |
      -- Generated by nan-wa-utils
      aura_env.absorbDbKeys = {
          ["school"] = 1,
          ["basePoints"] = 2,
          ["pointsPerLevel"] = 3,
          ["baseLevel"] = 4,
          ["maxLevel"] = 5,
          ["spellLevel"] = 6,
          ["healingMultiplier"] = 7,
      }
      aura_env.absorbDb = {
      {%- for effect in effects %}
          [{{ "{:>6}".format(effect.spellId) }}] = {
              {{- "{:>4}".format(effect.school) -}},
              {{- "{:>6g}".format(effect.base) -}},
              {{- "{:>5g}".format(effect.perLevel) -}},
              {{- "{:>3}".format(effect.baseLevel) -}},
              {{- "{:>3}".format(effect.maxLevel) -}},
              {{- "{:>3}".format(effect.spellLevel) -}},
              {#- FIXME: move healingMultiplier to CSV -#}
              {%- if effect.name == "Power Word: Shield" or effect.name == "Ice Barrier" -%}
              {{- " 0.1" -}}
              {%- else -%}
              {{- " 0  " -}}
              {%- endif -%}
          }, --
          {%- if effect.class %}
          {{- ' ' }}[{{ effect.class }}]
          {%- endif %}
          {{- ' ' }}{{- effect.name }}
          {%- if effect.rank %}
          {{- ' '}}({{ effect.rank }})
          {%- endif %}
      {%- endfor %}
      }
